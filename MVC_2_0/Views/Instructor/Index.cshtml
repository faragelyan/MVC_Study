@model List<MVC_2_0.Models.Instructor>

@{
    ViewData["Title"] = "All Instructors";
}

@section Scripts {
    <script>
        // Debounced AJAX search
        let timeout;
        function liveSearch(input) {
            clearTimeout(timeout);
            timeout = setTimeout(() => {
                const searchTerm = input.value;

                fetch(`/Instructor/SearchPartial?search=${encodeURIComponent(searchTerm)}`)
                    .then(res => res.text())
                    .then(html => {
                        document.getElementById("instructorTableBody").innerHTML = html;
                    });
            }, 300); // 300ms delay for debounce
        }
    </script>
}

<style>
    tr:hover {
        background-color: #e6f2ff !important;
    }

    .instructor-img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 6px;
    }
</style>

<h2 class="mb-4">@ViewData["Title"]</h2>

<!-- 🔍 Search + Add New Instructor -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="d-flex w-50">
        <input type="text"
               class="form-control me-2"
               placeholder="Search by name..."
               oninput="liveSearch(this)" />
    </div>

    <a asp-action="Add" class="btn btn-success">➕ Add New Instructor</a>
</div>

<!-- ✅ Table -->
<table class="table table-striped table-bordered table-hover">
    <thead class="table-dark">
        <tr>
            <th>Name</th>
            <th>Address</th>
            <th>Salary</th>
            <th>Department</th>
            <th>Course</th>
            <th>Image</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="instructorTableBody">
        @await Html.PartialAsync("_InstructorTablePartial", Model)
    </tbody>
</table>
