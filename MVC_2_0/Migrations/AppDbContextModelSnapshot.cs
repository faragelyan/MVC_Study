// <auto-generated />
using MVC_2_0.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_2_0.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_2_0.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("MinDegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = 100,
                            DeptId = 1,
                            Hours = 30,
                            MinDegree = 50,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Degree = 100,
                            DeptId = 2,
                            Hours = 25,
                            MinDegree = 60,
                            Name = "SQL"
                        },
                        new
                        {
                            Id = 3,
                            Degree = 100,
                            DeptId = 3,
                            Hours = 40,
                            MinDegree = 55,
                            Name = "AI Basics"
                        },
                        new
                        {
                            Id = 4,
                            Degree = 100,
                            DeptId = 4,
                            Hours = 35,
                            MinDegree = 65,
                            Name = "Ethical Hacking"
                        },
                        new
                        {
                            Id = 5,
                            Degree = 100,
                            DeptId = 5,
                            Hours = 45,
                            MinDegree = 60,
                            Name = "Genomics"
                        },
                        new
                        {
                            Id = 6,
                            Degree = 100,
                            DeptId = 6,
                            Hours = 20,
                            MinDegree = 50,
                            Name = "Microcontrollers"
                        },
                        new
                        {
                            Id = 7,
                            Degree = 100,
                            DeptId = 7,
                            Hours = 50,
                            MinDegree = 70,
                            Name = "ML with Python"
                        },
                        new
                        {
                            Id = 8,
                            Degree = 100,
                            DeptId = 8,
                            Hours = 30,
                            MinDegree = 60,
                            Name = "AWS"
                        },
                        new
                        {
                            Id = 9,
                            Degree = 100,
                            DeptId = 9,
                            Hours = 28,
                            MinDegree = 60,
                            Name = "Arduino"
                        },
                        new
                        {
                            Id = 10,
                            Degree = 100,
                            DeptId = 10,
                            Hours = 32,
                            MinDegree = 50,
                            Name = "UX Design"
                        });
                });

            modelBuilder.Entity("MVC_2_0.Models.CrsResult", b =>
                {
                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("CrsId", "TraineeId");

                    b.HasIndex("TraineeId");

                    b.ToTable("CrsResults");

                    b.HasData(
                        new
                        {
                            CrsId = 1,
                            TraineeId = 1,
                            Degree = 61,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 2,
                            TraineeId = 2,
                            Degree = 62,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 3,
                            TraineeId = 3,
                            Degree = 63,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 4,
                            TraineeId = 4,
                            Degree = 64,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 5,
                            TraineeId = 5,
                            Degree = 65,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 6,
                            TraineeId = 6,
                            Degree = 66,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 7,
                            TraineeId = 7,
                            Degree = 67,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 8,
                            TraineeId = 8,
                            Degree = 68,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 9,
                            TraineeId = 9,
                            Degree = 69,
                            Id = 0
                        },
                        new
                        {
                            CrsId = 10,
                            TraineeId = 10,
                            Degree = 70,
                            Id = 0
                        });
                });

            modelBuilder.Entity("MVC_2_0.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manager = "Mr. Farag",
                            Name = "Software"
                        },
                        new
                        {
                            Id = 2,
                            Manager = "Ms. Salma",
                            Name = "Networks"
                        },
                        new
                        {
                            Id = 3,
                            Manager = "Dr. Hanaa",
                            Name = "AI"
                        },
                        new
                        {
                            Id = 4,
                            Manager = "Eng. Karim",
                            Name = "Security"
                        },
                        new
                        {
                            Id = 5,
                            Manager = "Dr. Mona",
                            Name = "Bioinformatics"
                        },
                        new
                        {
                            Id = 6,
                            Manager = "Eng. Omar",
                            Name = "Embedded"
                        },
                        new
                        {
                            Id = 7,
                            Manager = "Dr. Amina",
                            Name = "Data Science"
                        },
                        new
                        {
                            Id = 8,
                            Manager = "Ms. Layla",
                            Name = "Cloud"
                        },
                        new
                        {
                            Id = 9,
                            Manager = "Mr. Hatem",
                            Name = "Robotics"
                        },
                        new
                        {
                            Id = 10,
                            Manager = "Ms. Nour",
                            Name = "Design"
                        });
                });

            modelBuilder.Entity("MVC_2_0.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CrsId");

                    b.HasIndex("DeptId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Town 1",
                            CrsId = 1,
                            DeptId = 1,
                            ImageUrl = "instructor1.png",
                            Name = "Instructor 1",
                            Salary = 5100m
                        },
                        new
                        {
                            Id = 2,
                            Address = "Town 2",
                            CrsId = 2,
                            DeptId = 2,
                            ImageUrl = "instructor2.png",
                            Name = "Instructor 2",
                            Salary = 5200m
                        },
                        new
                        {
                            Id = 3,
                            Address = "Town 3",
                            CrsId = 3,
                            DeptId = 3,
                            ImageUrl = "instructor3.png",
                            Name = "Instructor 3",
                            Salary = 5300m
                        },
                        new
                        {
                            Id = 4,
                            Address = "Town 4",
                            CrsId = 4,
                            DeptId = 4,
                            ImageUrl = "instructor4.png",
                            Name = "Instructor 4",
                            Salary = 5400m
                        },
                        new
                        {
                            Id = 5,
                            Address = "Town 5",
                            CrsId = 5,
                            DeptId = 5,
                            ImageUrl = "instructor5.png",
                            Name = "Instructor 5",
                            Salary = 5500m
                        },
                        new
                        {
                            Id = 6,
                            Address = "Town 6",
                            CrsId = 6,
                            DeptId = 6,
                            ImageUrl = "instructor6.png",
                            Name = "Instructor 6",
                            Salary = 5600m
                        },
                        new
                        {
                            Id = 7,
                            Address = "Town 7",
                            CrsId = 7,
                            DeptId = 7,
                            ImageUrl = "instructor7.png",
                            Name = "Instructor 7",
                            Salary = 5700m
                        },
                        new
                        {
                            Id = 8,
                            Address = "Town 8",
                            CrsId = 8,
                            DeptId = 8,
                            ImageUrl = "instructor8.png",
                            Name = "Instructor 8",
                            Salary = 5800m
                        },
                        new
                        {
                            Id = 9,
                            Address = "Town 9",
                            CrsId = 9,
                            DeptId = 9,
                            ImageUrl = "instructor9.png",
                            Name = "Instructor 9",
                            Salary = 5900m
                        },
                        new
                        {
                            Id = 10,
                            Address = "Town 10",
                            CrsId = 10,
                            DeptId = 10,
                            ImageUrl = "instructor10.png",
                            Name = "Instructor 10",
                            Salary = 6000m
                        });
                });

            modelBuilder.Entity("MVC_2_0.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "City 1",
                            DeptId = 1,
                            Grade = "B",
                            ImageUrl = "trainee1.png",
                            Name = "Trainee 1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "City 2",
                            DeptId = 2,
                            Grade = "A",
                            ImageUrl = "trainee2.png",
                            Name = "Trainee 2"
                        },
                        new
                        {
                            Id = 3,
                            Address = "City 3",
                            DeptId = 3,
                            Grade = "B",
                            ImageUrl = "trainee3.png",
                            Name = "Trainee 3"
                        },
                        new
                        {
                            Id = 4,
                            Address = "City 4",
                            DeptId = 4,
                            Grade = "A",
                            ImageUrl = "trainee4.png",
                            Name = "Trainee 4"
                        },
                        new
                        {
                            Id = 5,
                            Address = "City 5",
                            DeptId = 5,
                            Grade = "B",
                            ImageUrl = "trainee5.png",
                            Name = "Trainee 5"
                        },
                        new
                        {
                            Id = 6,
                            Address = "City 6",
                            DeptId = 6,
                            Grade = "A",
                            ImageUrl = "trainee6.png",
                            Name = "Trainee 6"
                        },
                        new
                        {
                            Id = 7,
                            Address = "City 7",
                            DeptId = 7,
                            Grade = "B",
                            ImageUrl = "trainee7.png",
                            Name = "Trainee 7"
                        },
                        new
                        {
                            Id = 8,
                            Address = "City 8",
                            DeptId = 8,
                            Grade = "A",
                            ImageUrl = "trainee8.png",
                            Name = "Trainee 8"
                        },
                        new
                        {
                            Id = 9,
                            Address = "City 9",
                            DeptId = 9,
                            Grade = "B",
                            ImageUrl = "trainee9.png",
                            Name = "Trainee 9"
                        },
                        new
                        {
                            Id = 10,
                            Address = "City 10",
                            DeptId = 10,
                            Grade = "A",
                            ImageUrl = "trainee10.png",
                            Name = "Trainee 10"
                        });
                });

            modelBuilder.Entity("MVC_2_0.Models.Course", b =>
                {
                    b.HasOne("MVC_2_0.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_2_0.Models.CrsResult", b =>
                {
                    b.HasOne("MVC_2_0.Models.Course", "Course")
                        .WithMany("CrsResult")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVC_2_0.Models.Trainee", "Trainee")
                        .WithMany("CrsResult")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("MVC_2_0.Models.Instructor", b =>
                {
                    b.HasOne("MVC_2_0.Models.Course", "Course")
                        .WithMany("Instructors")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVC_2_0.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_2_0.Models.Trainee", b =>
                {
                    b.HasOne("MVC_2_0.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_2_0.Models.Course", b =>
                {
                    b.Navigation("CrsResult");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("MVC_2_0.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("MVC_2_0.Models.Trainee", b =>
                {
                    b.Navigation("CrsResult");
                });
#pragma warning restore 612, 618
        }
    }
}
